geom_point(size = 1.0) +
theme_bw(base_size = 16) +
#scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "Number of Clusters", title = "TARA V9 - 264 samples")
#pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = Number_of_Clusters,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
#scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "Number of Clusters", title = "TARA V9 - 264 samples")
pl
#pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = Number_of_Clusters,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "Number of Clusters", title = "TARA V9 - 264 samples")
pl
#pl + facet_grid(. ~ Iteration)
View(d5)
pl <- ggplot(d5,
aes(x = boundary_value,
y = Number_of_Clusters,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "Number of Clusters", title = "TARA V9 - 264 samples")
#pl
pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
#scale_x_log10(name = "boundary value") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
pl
#pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
pl
#pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
#scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
pl
#pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
scale_colour_viridis(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
#scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
pl
#pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
scale_colour_viridis(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
pl
#pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
scale_colour_viridis(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
#pl
pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
scale_colour_viridis(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
#scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
#pl
pl + facet_grid(. ~ Iteration)
pl <- ggplot(d5,
aes(x = boundary_value,
y = CPU,
color = Iteration)) +
scale_colour_viridis(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", y = "% of CPU", title = "TARA V9 - 264 samples")
#pl
pl + facet_grid(. ~ Iteration)
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_of_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(CPU = readr::parse_number(percentage_of_CPU)) -> d5
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(CPU = readr::parse_number(percentage_of_CPU)) -> d5
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(CPU = readr::parse_number(percentage_CPU)) -> d5
View(d5)
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(CPU = parse_number(percentage_CPU)) -> d5
View(d5)
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters)) -> d5
pl <- ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples")
#pl
pl + facet_grid(. ~ variables)
pl <- ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples")
#pl
pl + facet_grid(. ~ variables, scale = "free")
pl <- ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples")
#pl
pl + facet_grid(. ~ variables, scales = "free")
pl <- ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_grid(. ~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_heat(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
heat.colors(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0, col = heat.colors()) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0, col = heat.colors(Iteration)) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters)) -> d5
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
#scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0, heat.colors(3)) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
#scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0, aes(heat.colors(3))) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
#scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0, aes(color = heat.colors(3))) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_magma_d(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(option = "magma", name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
expand_limits(y = 0)
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
expand_limits(y = 0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters))
mutate(variables = str_replace(variables,"number_of_clusters", "Number of Clusters")-> d5
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters)) %>%
mutate(variables = str_replace(variables,"number_of_clusters", "Number of Clusters")-> d5
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters)) %>%
mutate(variables = str_replace(variables,"number_of_clusters", "Number of Clusters") -> d5
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
expand_limits(y = 0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters)) %>%
mutate(variables = str_replace(variables,"number_of_clusters", "Number of Clusters") -> d5
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters)) %>%
mutate(variables = str_replace(variables, "number_of_clusters", "Number of Clusters")) -> d5
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
expand_limits(y = 0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","Memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, memory, CPU, number_of_clusters)) %>%
mutate(variables = str_replace(variables, "number_of_clusters", "Number of Clusters")) -> d5
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","Memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, Memory, CPU, number_of_clusters)) %>%
mutate(variables = str_replace(variables, "number_of_clusters", "Number of Clusters")) -> d5
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
expand_limits(y = 0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
input5 <- "TARA_V9_264_samples.log"
col_names <- c("Sample","Iteration","boundary_value",
"time_in_sec","Memory","percentage_CPU","number_of_clusters")
read_tsv(input5,col_names = col_names) %>%
mutate(Iteration = as.factor(Iteration)) %>%
mutate(CPU = parse_number(percentage_CPU)) %>%
gather("variables", "values", c(time_in_sec, Memory, CPU, number_of_clusters)) %>%
mutate(variables = str_replace(variables, "number_of_clusters", "Number of Clusters")) %>%
mutate(variables = str_replace(variables, "time_in_sec", "Time (s)"))-> d5
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
scale_colour_viridis_d(name = "Iteration") +
geom_point(size = 1.0) +
expand_limits(y = 0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
ggplot(d5,
aes(x = boundary_value,
y = values,
color = Iteration)) +
geom_point(size = 1.0) +
expand_limits(y = 0) +
theme_bw(base_size = 16) +
scale_x_log10(name = "boundary value (log)") +
labs(x = "boundary value", title = "TARA V9 - 264 samples") +
facet_wrap(~ variables, scales = "free")
library(tidyverse)
library(scales)
library(viridis)
setwd("C:\\Users\\Milena K\\OneDrive\\Documents\\Master Biostudium\\Projekt_France\\Internship_2019/")
col_names <- c("Unique","Abundance","Center_Amplicon_Name",
"Seed_Abundance","Singletons","Iterations","Steps")
input <- "all_forest_soils_18S_V4_904_samples_1f.stats"
read_tsv(input,n_max=10000,col_names = col_names) %>%
mutate(Percentage_of_Singletons=(Singletons/Abundance)*100) %>%
mutate(Ratio_Seed_Abundance_Total_Abundance=Seed_Abundance/Abundance)  %>%
arrange(Abundance) -> d
library(tidyverse)
library(scales)
library(viridis)
setwd("C:\\Users\\Milena K\\OneDrive\\Documents\\Master Biostudium\\Projekt_France\\Internship_2019\\swarm_stats/")
col_names <- c("Unique","Abundance","Center_Amplicon_Name",
"Seed_Abundance","Singletons","Iterations","Steps")
input <- "all_forest_soils_18S_V4_904_samples_1f.stats"
read_tsv(input,n_max=10000,col_names = col_names) %>%
mutate(Percentage_of_Singletons=(Singletons/Abundance)*100) %>%
mutate(Ratio_Seed_Abundance_Total_Abundance=Seed_Abundance/Abundance)  %>%
arrange(Abundance) -> d
read_tsv(input,col_names = col_names) %>%
mutate(Percentage_of_Singletons=(Singletons/Abundance)*100) %>%
mutate(Ratio_Seed_Abundance_Total_Abundance=Seed_Abundance/Abundance)  %>%
arrange(Abundance) -> d
library(tidyverse)
library(scales)
library(viridis)
setwd("C:\\Users\\Milena K\\OneDrive\\Documents\\Master Biostudium\\Projekt_France\\Internship_2019\\swarm_stats/")
col_names <- c("Unique","Abundance","Center_Amplicon_Name",
"Seed_Abundance","Singletons","Iterations","Steps")
input <- "all_forest_soils_18S_V4_904_samples_1f.stats"
read_tsv(input,col_names = col_names) %>%
mutate(Percentage_of_Singletons=(Singletons/Abundance)*100) %>%
mutate(Ratio_Seed_Abundance_Total_Abundance=Seed_Abundance/Abundance)  %>%
arrange(Abundance) -> d
View(d)
library(tidyverse)
library(scales)
library(viridis)
setwd("C:\\Users\\Milena K\\OneDrive\\Documents\\Master Biostudium\\Projekt_France\\Internship_2019\\swarm_stats/")
col_names <- c("Unique","Abundance","Center_Amplicon_Name",
"Seed_Abundance","Singletons","Iterations","Steps")
input <- "all_forest_soils_18S_V4_904_samples_1f.stats"
read_tsv(input,col_names = col_names) %>%
mutate(Percentage_of_Singletons=(Singletons/Abundance)*100) %>%
mutate(Ratio_Seed_Abundance_Total_Abundance=Seed_Abundance/Abundance)  %>%
arrange(Abundance) -> d
